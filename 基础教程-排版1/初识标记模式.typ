= 章节练习

你好。

看起来对中文的支持很好。

你是信的开头
诗的内容
童话的结尾

我是一段文本

我是另一段文本

\` 转义

== 二级标题

\`\`\`

多次转义也可以。

#show strong: content => {
  show regex("\p{Hani}"): it => box(place(text("·", size: 0.8em), dx: 0.5em, dy: 0.75em) + it)
  content.body
}

*修改后的强调效果*

有点意思，看起来这是可以写在*任意部分*的代码块。

看看_这个_，看起来同样没有什么效果。

```py
def function():
    print("Hello")

hello()
```

== 练习

1. 输出

欲穷千里目，/*
加点注释不就行了
*/更上一层楼。

欲穷千里目，更上一层楼。

这是利用了注释不会在时插入空格的特性，从本质上考虑，似乎就是注释全部被处理掉了，所以输入编译器的内容本质上被拼接起来了。

2. 输出星号

\*

完成了

3. 插入包含反引号的代码小片段

好的，```this is a code snippet, but there is a "`".```

4. 插入连续的三个反引号

```` ``` ````

完成了

5. 插入行内高亮代码

你可以在 Typst 内通过插件 ```typc plugin("typst.wasm")``` 调用 Typst 编译器。

6. 在有序列表之间插入描述

约法五章。

+ 其一。
+ 其二。

前两条不算。

3. 其三。
+ 其四。
+ 其五。
